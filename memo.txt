Verification 엔티티
- email, phoneNumber를 verify(검증)할 때, verification 정보를 db에 만들기 위해서 생성된 파일.
- email, phoneNumber로 검증이 완료되면 고유한 key값을 생성해줄 것
- 위 key or token 을 통하여 사용자가 verifed 되었는지 체크 가능

phoneNumber verifed 후에 email 검증을 하는 이유는

니콜라스 답변
Ideally when you create account you will verify your phone first and then complete your profile.

When you wanna login and you already have an account you can use email or phone


--------
typeorm 에서 beforeUpdate, beforeInsert 사이클 함수는 인스턴스화 하였을때랑, 업데이트 했을 때 hook에 걸린다.

유저가 운전모드 전환, 위치정보 보내기를 할 떄
Subscribe 에서 사람들에게 알림으로 알려줘야 한다.

---

active record 패턴은 Model 내에서 Database에 접근하는 패턴이다.

data Mapper 패턴은 모델 대신 리포지토리에서 데이터베이스에 액세스하는 접근 방식이다.

---

Pub/Sub 이란?

Publish / Subscription

하나의 채널을 열어놓고 여러개의 프로그램이 혹은 여러 서버가 해당 채널을 구독하게 한 뒤 서버에서 이벤트가 발생하면 해당 내용을 발행하면 모든 구독자들이 해당 이벤트를 받을 수 있는 기능

즉
채널을 열어놓고
다수의 프로그램 or 다수의 서버가
해당 채널을 구독하게 한 뒤
서버에서 이벤트가 발생하면
채널을 구독하고 있는 프로그램 or 서버들이 이벤트를 받는다.

다양한 용도로 사용되는데
예를들면 공용의 저장소를 만들어놨다고 알림메세지를 보내면
모든 서버들이 해당 파일을 다운 받거나 혹은 변경된 데이터를 모두가 알 수 있게 '공지' 하듯 알리는데 이보다 더 좋은 기능이 없다.

graphql-yoga에서 Subscription은 WebSocket에서 실시간으로 만들어진다.

그러나 우리는 토큰 인증이나 요청을 HTTP로 처리하고 있기에 WebSocket에서의 인증을 하는 법을 모른다.
인증이 없다면 모든 Subscription들이 채팅 메세지를 받게될것이다.

--------
OneToOne

Ride = JoinColumn
Ride <----> Chat 


? OneToOne 이란
A가 B의 인스턴스 하나만 포함하고 B는 A의 인스턴스 하나만 포함하는 관계
A -> B
B -> A

A or B 둘 중 한쪽은 JoinColumn이 되어야 한다.

? JoinColumn이란

JoinColumn 으로 설정된 테이블에는 상대 테이블의 외래키가 저장된다.

+-------------+--------------+----------------------------+
|                        profile                          |
+-------------+--------------+----------------------------+
| id          | int(11)      | PRIMARY KEY AUTO_INCREMENT |
| gender      | varchar(255) |                            |
| photo       | varchar(255) |                            |
+-------------+--------------+----------------------------+

+-------------+--------------+----------------------------+
|                          user   @JoinColumn()           |
+-------------+--------------+----------------------------+
| id          | int(11)      | PRIMARY KEY AUTO_INCREMENT |
| name        | varchar(255) |                            |
| profileId   | int(11)      | FOREIGN KEY                |
+-------------+--------------+----------------------------+




--------


USER_TOKEN = 
eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNTM3OTM3NjY5fQ.B0HOPMY36I2uHSXATlVMuZwtnssaEe1g0d0lg8Y_CQw

DRIVER_TOKEN =
eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwiaWF0IjoxNTM3OTM3OTQ3fQ.QdVzMMcJwZRKqGDmpB_jlEmL6ljRR0i6BV7jymMl5j8